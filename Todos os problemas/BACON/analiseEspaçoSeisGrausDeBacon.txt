n = número de filmes
m = número médio de atores por filme
v = número total de atores únicos
e = número total de conexões no grafo

  def carregar_datasets(movies_path, credits_path):		        		iterações		espaço por iteração
03.    movies = pd.read_csv(movies_path)			                	1			    O(n)
04.    credits = pd.read_csv(credits_path)			            		1			    O(n)
05.    Retornar movies, credits				                    		1			    O(n)

S(n) = O(n) ---> O espaço depende de carregar os datasets.

---

  def construir_grafo(credits):				                		iterações		espaço por iteração
08.    grafo = defaultdict(list)				                	1			    O(v + e)
09.    filmes_atores = defaultdict(list)			            		1			    O(n * m)
10.    Para cada linha em credits:			                		n			    O(1)
11.        elenco = json.loads(row['cast'])		            			n			    O(m)
12.        filme_id = row['movie_id']			                		n			    O(1)
13.        atores = [ator['name'] for ator in elenco]		    			n			    O(m)
14.        Registrar atores no mapa filmes_atores		        		n			    O(m)
15.        Para cada ator i no elenco:			            			n * m			O(1)
16.            Para cada ator j após i no elenco:		    			n * m^2		    O(1)
17.                Adicionar conexão bidirecional no grafo				n * m^2		    O(1)
18.    Retornar grafo, filmes_atores			                		1			    O(1)

S(n) = O(v + e) + O(n * m) ---> O espaço depende do número de atores e conexões.

---

  def encontrar_caminho(grafo, filmes_atores, ator1, ator2):				iterações		espaço por iteração
22.    Se ator1 ou ator2 não estão no grafo:		            			1			    O(1)
23.        Retornar None					                    	0			    O(1)
24.    visitados = set()				                        	1			    O(v)
25.    fila = deque([(ator1, [ator1], [])])		            			1			    O(v^2)
26.    Enquanto fila não está vazia:			                		v + e			O(1)
27.        atual, caminho_atores, caminho_filmes = fila.popleft() 			v			    O(v)
28.        Se atual for igual a ator2:			                		1			    O(1)
29.            Retornar caminho_atores, caminho_filmes		    			0			    O(v)
30.        Adicionar atual ao conjunto visitados		        		v			    O(1)
31.        Para cada vizinho e filme_id no grafo:		        		e			    O(1)
32.            Se vizinho não está em visitados:		        		e			    O(1)
33.                Adicionar vizinho e caminho atualizado	    			e			    O(v)
34.    Retornar None				                            		1			    O(1)

S(v, e) = O(v^2 + e) ---> O espaço é dominado pela fila na BFS.

---

  Programa principal:						                    	iterações		espaço por iteração
37. Carregar datasets					                        	1			    O(n)
39. Construir grafo e mapa de filmes			                		1			    O(v + e)
42. Encontrar caminho				                            		1			    O(v^2 + e)
47. Imprimir resultado ou mensagem de erro		            			1			    O(1)

S(n, v, e) = O(n) + O(v + e) + O(v^2 + e) ---> O(v^2 + e) domina a análise.
